{"ast":null,"code":"var _jsxFileName = \"/home/sana/hangman/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport { showNotification as show } from './helpers/helpers';\nimport Popup from './components/Popup';\nimport Notification from './components/Notification';\nconst words = ['binary Search', 'stack and queue', 'interface', 'recursive algorithm', 'internet protocol'];\nconst hint = ['part to win', 'data structure', 'interlinking', 'calls in a call', 'rules over a network'];\nlet ran = Math.floor(Math.random() * words.length);\nlet selectedWord = words[ran];\nlet selectedHint = hint[ran];\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  useEffect(() => {\n    const handleKeyDown = event => {\n      const {\n        key,\n        keyCode\n      } = event;\n\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true);\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n    selectedHint = hint[random];\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    selectedHint: selectedHint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"game-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Figure, {\n    wrongLetters: wrongLetters,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(WrongLetters, {\n    wrongLetters: wrongLetters,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Word, {\n    selectedWord: selectedWord,\n    correctLetters: correctLetters,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(Popup, {\n    correctLetters: correctLetters,\n    wrongLetters: wrongLetters,\n    selectedWord: selectedWord,\n    setPlayable: setPlayable,\n    playAgain: playAgain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Notification, {\n    showNotification: showNotification,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/sana/hangman/src/App.js"],"names":["React","useState","useEffect","Header","Figure","WrongLetters","Word","showNotification","show","Popup","Notification","words","hint","ran","Math","floor","random","length","selectedWord","selectedHint","App","playable","setPlayable","correctLetters","setCorrectLetters","wrongLetters","setWrongLetters","setShowNotification","handleKeyDown","event","key","keyCode","letter","toLowerCase","includes","currentLetters","window","addEventListener","removeEventListener","playAgain"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport {showNotification as show} from './helpers/helpers';\nimport Popup from './components/Popup';\nimport Notification from './components/Notification';\n\nconst words = ['binary Search', 'stack and queue', 'interface', 'recursive algorithm','internet protocol'];\nconst hint =['part to win','data structure','interlinking','calls in a call','rules over a network'];\n\nlet ran= Math.floor(Math.random() * words.length);\nlet selectedWord = words[ran];\nlet selectedHint = hint[ran];\n\nfunction App() {\n\tconst [playable, setPlayable]=useState(true);\n\tconst [correctLetters,setCorrectLetters]=useState([]);\n\tconst [wrongLetters,setWrongLetters]=useState([]);\n\tconst [showNotification,setShowNotification]=useState(false);\n\n\tuseEffect(()=>{\n\t\tconst handleKeyDown=event=>{\n\t\t\tconst{key,keyCode}=event;\n\t\t\t\tif (playable && keyCode >= 65 && keyCode <= 90) {\n\t\t\t\t\tconst letter = key.toLowerCase();\n\t\t\n\t\t\t\t\tif (selectedWord.includes(letter)) {\n\t\t\t\t\t\tif (!correctLetters.includes(letter)) {\n\t\t\t\t\t\t\tsetCorrectLetters(currentLetters=>[...currentLetters,letter]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshow(setShowNotification);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!wrongLetters.includes(letter)) {\n\t\t\t\t\t\t\tsetWrongLetters(wrongLetters=>[...wrongLetters,letter]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshow(setShowNotification);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\twindow.addEventListener('keydown', handleKeyDown);\n\t\treturn()=>window.removeEventListener('keydown',handleKeyDown);\n\t},[correctLetters,wrongLetters,playable]);\n\n\tfunction playAgain(){\n\t\tsetPlayable(true);\n\t\tsetCorrectLetters([]);\n\t\tsetWrongLetters([]);\n\t\tconst random = Math.floor(Math.random() * words.length);\n\t\tselectedWord=words[random];\n\t\tselectedHint=hint[random];\n\t}\n\n\treturn(\n\t<>\n\t\t<Header selectedHint={selectedHint} />\n\t\t<div className=\"game-container\">\n\t\t\t<Figure wrongLetters={wrongLetters} />\n\t\t\t<WrongLetters wrongLetters={wrongLetters} />\n\t\t\t<Word selectedWord={selectedWord} correctLetters={correctLetters} />\n\t\t</div>\n\t\t<Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\n\t\t<Notification showNotification={showNotification} />\n\t</>\n\t);\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}